;; (let ((fn (lambda () 123))) (fn))
(0 (5 0) 1 0 3 123)
;; (quote 123)
(3 123)
;; (begin (quote 321) (quote 123))
(0 (2 3 123) 3 321)
;; (let ((v (quote 123))) v)
(0 (10 0) 3 123)
;; (let ((v (quote 1))) (if v (quote 123) (quote 234)))
(0 (6 0 (3 123) (3 234)) 3 1)
;; (let ((v (quote #f))) (if v (quote 234) (quote 123)))
(0 (6 0 (3 234) (3 123)) 3 #f)
;; (let ((v 123)) (let ((fn (lambda () v))) (fn)))
(0 (0 (5 0) 1 0 10 0) 3 123)
;; (let ((v 123)) (let ((dummy 321)) (let ((fn (lambda () v))) (fn))))
(0 (0 (0 (5 0) 1 0 10 1) 3 321) 3 123)
;; (let ((v 123)) (let ((d1 111)) (let ((d2 222)) v)))
(0 (0 (0 (10 2) 3 222) 3 111) 3 123)
;; (let ((v 123)) (let ((dummy 234)) (let ((fn (lambda () v))) v)))
(0 (0 (0 (10 2) 1 0 10 1) 3 234) 3 123)
