EVAL(CONS(SYMBOL("eq?"),CONS(NUMBER(1),CONS(NUMBER(0),NIL))));
EVAL(CONS(SYMBOL("define"),CONS(SYMBOL("lparen"),CONS(NUMBER(40),NIL))));
EVAL(CONS(SYMBOL("define"),CONS(SYMBOL("rparen"),CONS(NUMBER(41),NIL))));
EVAL(CONS(CONS(SYMBOL("make-definer"),CONS(CONS(SYMBOL("quote"),CONS(SYMBOL("def-toplevel-macro!"),NIL)),NIL)),CONS(CONS(SYMBOL("quote"),CONS(CONS(SYMBOL("define"),CONS(CONS(SYMBOL("abc"),CONS(SYMBOL("asdf"),NIL)),CONS(NUMBER(123),NIL))),NIL)),NIL)));
EVAL(CONS(SYMBOL("eval"),CONS(CONS(SYMBOL("quote"),CONS(CONS(SYMBOL("post"),CONS(NUMBER(123),NIL)),NIL)),NIL)));
EVAL(CONS(SYMBOL("gc-used"),NIL));
EVAL(CONS(SYMBOL("gc"),NIL));
EVAL(CONS(SYMBOL("gc-used"),NIL));
EVAL(CONS(SYMBOL("make-value"),CONS(NUMBER(123),NIL)));
EVAL(CONS(SYMBOL("eval-step"),CONS(CONS(SYMBOL("make-state"),CONS(CONS(SYMBOL("make-redex"),CONS(CONS(SYMBOL("quote"),CONS(SYMBOL("a"),NIL)),CONS(CONS(SYMBOL("quote"),CONS(CONS(CONS(SYMBOL("a"),NUMBER(123)),NIL),NIL)),NIL))),CONS(CONS(SYMBOL("mt"),NIL),NIL))),NIL)));
EVAL(CONS(SYMBOL("bla"),NIL));
EVAL(CONS(SYMBOL("gc"),NIL));
EVAL(CONS(SYMBOL("apply"),CONS(SYMBOL("post"),CONS(CONS(SYMBOL("quote"),CONS(CONS(SYMBOL("bar-bar"),NIL),NIL)),NIL))));
EVAL(CONS(SYMBOL("define"),CONS(SYMBOL("foo"),CONS(CONS(SYMBOL("lambda"),CONS(NIL,CONS(CONS(SYMBOL("foo"),NIL),NIL))),NIL))));
